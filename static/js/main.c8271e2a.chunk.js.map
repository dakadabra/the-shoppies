{"version":3,"sources":["MovieNominationItem.tsx","NominationsList.tsx","SearchBar.tsx","loading.gif","shopify_logo.png","pageNotFound.png","App.tsx","index.tsx"],"names":["MovieNominationItem","movie","removeMovie","className","Title","Year","alt","src","Poster","type","color","onClick","NominationsList","nominations","map","SearchBar","setSearchText","useState","text","setText","href","action","placeholder","name","value","onChange","e","target","preventDefault","initialNominations","App","setNominations","nominationCount","setNominationCount","data","setData","error","setError","loading","setLoading","queryText","setQuery","nominateMovie","chosenMovie","some","item","imdbID","useEffect","fetch","then","resp","json","response","Response","Error","Search","catch","message","MovieResultItem","pageNotFound","disabled","shopifyLogo","filteredist","filter","load","length","result","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8271e2a.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  movie: MovieNomination;\n  removeMovie: NominateMovie;\n}\n\nexport const MovieNominationItem: React.FC<Props> = ({ movie, removeMovie }) => {\n  return (\n    <div className=\"singleMovie\">\n        <div className=\"title\">{movie.Title}</div>\n        {\"(\" + movie.Year + \") \"}\n        <img className=\"poster\"\n            alt={movie.Title}\n            src={movie.Poster === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : movie.Poster}\n        />\n        <button\n            type=\"submit\"\n            color=\"2B4C40\"\n            onClick={() => {\n                removeMovie(movie);\n            }}\n        >\n            Remove\n        </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { MovieNominationItem } from './MovieNominationItem';\n\ninterface Props {\n  nominations: MovieNomination[];\n  removeMovie: NominateMovie;\n}\n\nexport const NominationsList: React.FC<Props> = ({ nominations, removeMovie }) => {\n  return (\n    <div className=\"movieListContainer\">\n      {nominations.map(movie => (\n        <MovieNominationItem key={movie.Title} movie={movie} removeMovie={removeMovie} />\n      ))}\n    </div>\n  );\n};","import React, {useState} from 'react';\n\n/*\nSearch bar inspired by https://www.w3schools.com/howto/howto_css_searchbar.asp\n*/\n\ninterface Props {\n    setSearchText: SetSearchText;\n}\n\nexport const SearchBar: React.FC<Props> = ({setSearchText}) => {\n\n    const [text, setText] = useState('');\n\n    return (\n        <div className=\"topnav\">\n          <a href=\"#contact\">\n            <div className=\"search-container\">\n                <form action=\"/action_page.php\">\n                <input type=\"text\" placeholder=\"Search..\" name=\"search\" value={text} \n                    onChange={e => {\n                    setText(e.target.value);\n                    }}/>\n                    <button type=\"submit\" onClick={e => {\n                    e.preventDefault();\n                    setSearchText(text);\n                    setText('');\n                    }}><i className=\"fa fa-search\"></i></button>\n                </form>\n                </div>\n            </a>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/loading.0332057f.gif\";","export default __webpack_public_path__ + \"static/media/shopify_logo.1e72e870.png\";","export default __webpack_public_path__ + \"static/media/pageNotFound.0f3e6b76.png\";","/*\nOMDB API request code inspired by: https://github.com/jogeshpi03/omdb-react\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { NominationsList } from './NominationsList';\nimport { SearchBar } from './SearchBar';\nimport './styles.css';\nimport load from './loading.gif'\nimport shopifyLogo from './shopify_logo.png'\nimport pageNotFound from './pageNotFound.png'\n\nconst API_KEY = '9fefc733';\n\nconst initialNominations: MovieNomination[] = [];\n\nfunction App() {\n  const [nominations, setNominations] = useState(initialNominations);\n  const [nominationCount, setNominationCount] = useState(0);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [queryText, setQuery] = useState('Hire me');\n\n  //if the movie has not already been nominated and there are less than 5 nominations, nominate it\n  const nominateMovie = (chosenMovie: MovieNomination) => {\n    if (!(nominations.some(item => chosenMovie.imdbID === item.imdbID)) && nominationCount < 5) {\n      setNominations([...nominations, chosenMovie]);\n      setNominationCount(nominationCount+1);\n    }\n  };\n\n  //remove the movie from the list of nominations\n  const removeMovie = (chosenMovie: MovieNomination) => {\n    const filteredist = nominations.filter((movie) => movie !== chosenMovie);\n    setNominations(filteredist);\n    setNominationCount(nominationCount-1);\n  };\n  \n  useEffect(() => {\n      setLoading(true);\n      setError(null);\n      setData([]);\n      fetch(`https://www.omdbapi.com/?s=${queryText}&apikey=${API_KEY}`)\n      .then(resp => resp)\n      .then(resp => resp.json())\n      .then(response => {\n          if (response.Response === 'False') {\n              setError(response.Error);\n          }\n          else {\n              setData(response.Search);\n          }\n\n          setLoading(false);\n      })\n      .catch(({message}) => {\n          setError(message);\n          setLoading(false);\n      })\n\n  }, [queryText]);\n\n  interface Props {\n    Title: string;\n    Year: number;\n    Poster: string;\n    imdbID: string;\n    nominated: boolean;\n    nominateMovie: NominateMovie;\n  }\n  \n  const MovieResultItem: React.FC<Props> = ({Title, Year, Poster, imdbID, nominateMovie }) => {\n    return (\n      <div className=\"singleMovie\">\n        <div className=\"title\">{Title}</div>\n        {\" (\" + Year + \") \"}\n        <img className=\"poster\"\n          alt={Title}\n          src={Poster === 'N/A' ? pageNotFound : Poster}\n        />\n        <button\n          type=\"submit\"\n          disabled={nominations.some(item => imdbID === item.imdbID)}\n          onClick={() => {\n              nominateMovie({Title, Year, Poster, imdbID});\n          }}\n        >\n          Nominate\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bigContainer\">\n      <div className=\"landingPage\">\n        <h4>Welcome to the 2021</h4>\n        <div className=\"shoppiesText\">\n          <img className=\"shopifyLogo\" alt=\"shopifyLogo\" src={shopifyLogo}/>\n          <h1>shoppies</h1>\n        </div>\n        <h4>Movie Awards</h4>\n      </div>\n      <div className=\"searchContainer\">\n        <h2>Use the Search bar below to find and nominate your 5 favourite movies of all time.</h2>\n        <h2>Good luck with your nominations, and see you at the awards show!</h2>\n        <SearchBar setSearchText={value => setQuery(value)} />\n      </div>\n\n\n      <div className=\"searchResults\">\n        <h2>Nominations</h2>\n        {nominationCount === 0 && <h3>Nominate a movie below</h3>}\n        <NominationsList nominations={nominations} removeMovie={removeMovie} />\n      </div>\n\n      <h2>Results for \"{queryText}\"</h2>\n        <div className=\"movieListContainer\">\n          { loading && \n              <img src={load} alt=\"loading...\" />\n          }\n\n          { error !== null &&\n              <h3>\n                  {error}\n              </h3>\n          }\n          \n          { data !== null && data.length > 0 && data.map((result, index) => (\n            <MovieResultItem key={index} nominateMovie={nominateMovie} {...result} />\n          ))}\n        </div>\n\n      {nominationCount === 5 && <>\n      <div className=\"spacer\"/>\n      <div className=\"footer\">You have already nominated 5 movies, which is the maximum allowed!</div>\n      </>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}